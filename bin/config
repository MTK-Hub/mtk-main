#!/usr/bin/env ruby

require 'thor'
require 'yaml'
require 'json'
require 'fileutils'

module MTK
  class AnsibleHelper
    PRIVATE_DIR = "#{ENV['HOME']}/.ansible/private"

    def self.get_private_files()
      FileUtils.mkdir_p(PRIVATE_DIR) unless File.exist?(PRIVATE_DIR)

      private_files = Dir.glob(["#{PRIVATE_DIR}/*.yaml", "#{PRIVATE_DIR}/*.yml"]).to_a

      if private_files.empty?
        puts "\nWARNING: missing private data files in [#{PRIVATE_DIR}].\n\n" if retval.empty?

        File.open("#{PRIVATE_DIR}/main.yaml", 'w') do |f|
          f.write("---\n")
          f.write("# private data goes here\n")
          f.write("mtk_example_var_foo: bar\n")
        end

        private_files = Dir.glob(["#{PRIVATE_DIR}/*.yaml", "#{PRIVATE_DIR}/*.yml"]).to_a
      end

      return private_files
    end

    def self.run_playbook(playbook)
      private_files = get_private_files()

      cmd = "time -p ansible-playbook --diff -v #{playbook} -e @#{private_files.join(' -e @')}"
      system(cmd)
    end
  end

  class Config < Thor

    desc "list", "list available configs"
    def list()
      puts
      puts "Available Configs"
      puts "-----------------"

      Dir.chdir('playbooks') do
        Dir.glob(['**/*.yaml', '**/*.yml']) do |c|
          puts c
        end
      end

      puts
    end

    desc "apply CONFIG", "Applies CONFIG"
    def apply(config)
      playbook = "#{Dir.pwd}/playbooks/#{config}"
      abort "\nError: Couldn't find config [#{playbook}]\n\n" unless File.exist?(playbook)

      AnsibleHelper.run_playbook(playbook)
    end
  end
end

if __FILE__ == $0
  script_dir = nil
  if File.symlink?(__FILE__)
    script_dir = File.dirname(File.readlink(__FILE__))
  else
    script_dir = File.dirname(__FILE__)
  end

  ansible_dir = File.expand_path("#{script_dir}/../ansible")

  Dir.chdir(ansible_dir) do
    MTK::Config.start(ARGV)
  end
end
